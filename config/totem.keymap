//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define Base        0
#define Nav         1
#define Sym         2
#define Fun         3
#define Game        4
#define Gameplus    5

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmb_q {
            bindings = <&kp Q>;
            key-positions = <24 25>;
        };

        cmb_qu {
            bindings = <&qu>;
            key-positions = <27 28>;
        };

        cmb_th {
            bindings = <&mac_th>;
            key-positions = <12 13>;
        };

        cmb_ch {
            bindings = <&mac_ch>;
            key-positions = <23 24>;
        };

        cmb_sh {
            bindings = <&mac_sh>;
            key-positions = <11 12>;
        };

        cmb_wh {
            bindings = <&mac_wh>;
            key-positions = <2 13>;
        };

        cmb_eq {
            bindings = <&mac_eq>;
            key-positions = <15 16>;
        };

        cmb_neq {
            bindings = <&mac_neq>;
            key-positions = <13 14>;
        };

        cmb_and {
            bindings = <&mac_and>;
            key-positions = <5 6>;
        };

        cmb_or {
            bindings = <&mac_or>;
            key-positions = <3 4>;
        };

        cmb_gt {
            bindings = <&mac_gte>;
            key-positions = <8 9>;
        };

        cmb_lt {
            bindings = <&mac_lte>;
            key-positions = <0 1>;
        };

        cmb_ph {
            bindings = <&mac_ph>;
            key-positions = <21 22>;
        };

        cmb_gh {
            bindings = <&mac_gh>;
            key-positions = <2 3>;
        };

        cmb_i {
            bindings = <&kp RS(I)>;
            key-positions = <16 17>;
        };
    };

    macros {
        qu: qu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp Q &kp U>;
            label = "QU";
        };

        mac_th: mac_th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp H>;
            label = "MAC_TH";
        };

        mac_ch: mac_ch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp H>;
            label = "MAC_CH";
        };

        mac_gh: mac_gh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp G &kp H>;
            label = "MAC_GH";
        };

        mac_wh: wh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp W &kp H>;
            label = "WH";
        };

        mac_ph: mac_ph {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp H>;
            label = "MAC_PH";
        };

        mac_sh: mac_sh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp H>;
            label = "MAC_SH";
        };

        mac_public: mac_public {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp U &kp B &kp L &kp I &kp C>;
            label = "MAC_PUBLIC";
        };

        mac_private: mac_private {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp P &kp R &kp I &kp V &kp A &kp T &kp E>;
            label = "MAC_PRIVATE";
        };

        mac_and: mac_and {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AMPS &kp AMPS>;
            label = "MAC_AND";
        };

        mac_or: mac_or {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE>;
            label = "MAC_OR";
        };

        mac_eq: mac_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            label = "MAC_EQ";
        };

        mac_arrow: mac_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GT>;
            label = "MAC_ARROW";
        };

        mac_neq: man_neq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
            label = "MAN_NEQ";
        };

        mac_gte: mac_gte {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "MAC_GTE";
        };

        mac_lte: mac_lte {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EXCL &kp EQUAL>;
            label = "MAC_LTE";
        };

        mac_string: mac_string {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp R &kp I &kp N &kp G>;
            label = "MAC_STRING";
        };

        mac_strnge: mac_strnge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp S &kp T &kp R &kp I &kp N &kp G &kp DOT &kp LS(E) &kp M &kp P &kp T &kp Y>;
            label = "MAC_STRNGE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
           &kp X             &kp W               &kp M         &kp G      &kp J        &kp SEMICOLON  &kp BACKSPACE  &kp PERIOD  &kp SQT              &kp DOUBLE_QUOTES
           &hm LEFT_SHIFT C  &hm LEFT_CONTROL S  &kp N         &kp T      &kp K        &kp COMMA      &kp A          &kp E       &hm RIGHT_CONTROL I  &hm RIGHT_SHIFT H
&lt 3 TAB  &kp P             &kp F               &kp L         &kp D      &kp V        &kp QUESTION   &kp U          &kp O       &kp Y                &kp B              &hm RIGHT_ALT Z
                                                 &kp LEFT_GUI  &lt 1 ESC  &kp SPACE    &kp R          &lt 2 ENTER    &kp F13
            >;
        };

        Num {
            display-name = "Num";
            bindings = <
              &kp F1     &kp F2     &kp F3     &kp F4     &kp F5           &kp RBRC        &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
              &kp LC(A)  &kp LEFT   &kp DOWN   &kp RIGHT  &kp F10          &kp UNDERSCORE  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&kp LEFT_ALT  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp RG(LS(S))    &kp RPAR        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE  &kp KP_EQUAL
                                    &trans     &trans     &trans           &trans          &kp NUMBER_0  &kp DOT
            >;
        };

        Sym {
            display-name = "Sym";
            bindings = <
                &kp EXCL     &kp AT        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT    &kp CARET             &kp AMPERSAND   &kp KP_ASTERISK  &kp HASH  &kp DOLLAR
                &mac_string  &mac_strnge   &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans         &kp NON_US_BACKSLASH  &kp UNDERSCORE  &kp MINUS        &kp PLUS  &kp EQUAL
&studio_unlock  &mac_public  &mac_private  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans         &kp GRAVE             &kp EQUAL       &mac_arrow       &mac_eq   &kp SLASH   &kp HOME
                                           &trans                &trans                 &trans         &trans                &trans          &trans
            >;
        };

        Nav {
            display-name = "Nav";
            bindings = <
        &bootloader  &trans  &trans  &trans  &to 4     &trans    &trans          &kp UP    &kp END    &kp LS(INSERT)
        &kp CAPS     &trans  &trans  &trans  &trans    &kp HOME  &kp LEFT_ARROW  &kp DOWN  &kp RIGHT  &kp INS
&trans  &trans       &trans  &trans  &trans  &trans    &trans    &kp END         &trans    &trans     &kp F20         &kp DELETE
                             &trans  &trans  &trans    &trans    &trans          &trans
            >;
        };

        Gaming {
            display-name = "Gaming";
            bindings = <
            &kp Z           &kp X  &kp C      &kp V         &sl 5     &trans  &trans  &trans  &trans  &trans
            &kp TAB         &kp Q  &kp W      &kp E         &kp R     &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &kp LEFT_SHIFT  &kp A  &kp S      &kp D         &kp F     &trans  &trans  &trans  &trans  &trans  &trans
                                   &kp LCTRL  &kp LEFT_ALT  &trans    &trans  &trans  &trans
            >;
        };

        Gaming+ {
            display-name = "Gaming+";
            bindings = <
        &kp F10  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp T     &kp RA(RC(Y))  &kp RA(RC(U))  &trans  &trans  &kp LC(RA(DEL))
        &kp L    &kp O         &kp Y         &kp K         &kp G     &kp F5         &trans         &trans  &trans  &trans
&trans  &to 0    &trans        &trans        &trans        &trans    &trans         &trans         &trans  &trans  &trans           &kp LA(F4)
                               &kp J         &kp I         &kp M     &trans         &trans         &trans
            >;
        };
    };
};
